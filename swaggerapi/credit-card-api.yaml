openapi: 3.0.0
servers:

  -  url: http://localhost/CredtCardAPI/1.0.0
  -  url: https://localhost/CredtCardAPI/1.0.0

info:
  description: This is a API for a credit card provider. It should allow you to add new credit card accounts and view them as a list.
  version: "1.0.3"
  title: Simple Credit Card Processing API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
paths:
  /creditcards:
    get:
      tags:
        - admins
      summary: gets a all customer's credit cards
      security:
        - oAuthSample: [admin]   # Use OAuth with a different scope
      operationId: getCreditCards
      description: |
        Retrieves all the credit cards 
      parameters:
        - in: query
          name: skip
          description: number of records to skip for pagination
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreditCard'
        '400':
          description: bad input parameter
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetials'
        '403':
          description: Access token does not have the required scope
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetials'
    post:
      tags:
        - admins
      summary: adds a credit card
      security:
        - oAuthSample: [write]   # Use OAuth with a different scope
      operationId: addCreditCard
      description: Adds a valid credit card to the bank system for a certain customer identified
      responses:
        '201':
          description: credit card created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardResponse'
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetials'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetials'
        '403':
          description: Access token does not have the required scope
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorDetials'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditCard'
        description: Credit card to add
        required: true


#apply security globally...
security:
  - basicAuth: []


components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

    oAuthSample:    # <---- arbitrary name
      type: oauth2
      description: This API uses OAuth 2 with the implicit grant flow. [More info](https://api.example.com/docs/auth)
      flows:
        authorizationCode:
          authorizationUrl: https://localhost:8083/oauth/authorize
          tokenUrl: localhost:8083/oauth/token
          scopes:
            read: Grants read access
            write: Grants write access
            admin: Grants access to admin operations
  schemas:
    CreditCard:
      type: object
      required:
        - id
        - name
        - creditCardNumber
        - creditLimit
        - cvd
        - expiryMonth
        - expiryYear
        - cardNetwork
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: John Doe
        creditCardNumber:
          example: "5100000010001004"
          description: Credit card number. digits(20)
          type: string
        creditLimit:
          default: "2500"
          description: Maximum Credit card limit.
          type: string
        cvd:
          example: "123"
          description: Security code on the back of the credit card. This can be set to mandatory in the back office. digits(3 or 4)
          type: string
        expiryMonth:
          example: "02"
          description: eg. 02 for February. digits(2)
          type: string
        expiryYear:
          example: "18"
          description: eg. 15 for 2015. digits(2)
          type: string
        cardNetwork:
          $ref: '#/components/schemas/CardNetwork'
    CardNetwork:
      required:
        - name
      properties:
        name:
          type: string
          example: VISA
      type: object
    ErrorDetials:
      description: a set of error codes and detatails recieved when trying to to complete the request
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/JSONAPIErrorDetails'
    JSONAPIErrorDetails:
      description: Error detals object
      properties:
        code:
          format: int32
          type: integer
        details:
          type: string
        message:
          type: string
        reference:
          type: string
    CreditCardResponse:
      properties:
        code:
          format: integer
          type: number
        customerId:
          description: the customer ID.
          type: string
        message:
          type: string